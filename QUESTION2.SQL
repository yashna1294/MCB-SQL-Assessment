
CREATE TABLE tbl_SUPPLIER (
 SUPP_ID                NUMBER(38),
 SUPP_NAME 	        VARCHAR2(2000) NOT NULL, 
 SUPP_CONTACT_NAME 	VARCHAR2(2000) NOT NULL, 
 SUPP_ADDRESS 		VARCHAR2(2000) NOT NULL, 
 SUPP_CONTACT_NUMBER    VARCHAR2(2000) NOT NULL,
 SUPP_EMAIL 	        VARCHAR2(2000) NOT NULL,

CONSTRAINT PK_SUPPID PRIMARY KEY(SUPP_ID)

);

CREATE TABLE tbl_ORDER (
  ORDER_ID              NUMBER(38),
  ORDER_REF 			VARCHAR2(2000) NOT NULL, 
  SUPP_ID 		        NUMBER(38) NOT NULL,  
  CONSTRAINT PK_ORD_ID PRIMARY KEY(ORDER_ID), 
  CONSTRAINT fk_supplier
    FOREIGN KEY (SUPP_ID)
    REFERENCES tbl_supplier(SUPP_ID)
);

CREATE TABLE tbl_INV_order (

INV_ORDID                       NUMBER(38),
INV_ID                          NUMBER(38),
ORDER_ID  			            NUMBER(38),

 CONSTRAINT PK_INVO_ID PRIMARY KEY(INV_ORDID),

 CONSTRAINT fk_inv_ord
    FOREIGN KEY (INV_ID)
    REFERENCES tbl_INVOICE(INV_ID),
 CONSTRAINT fk_ord_inv
    FOREIGN KEY (ORDER_ID)
    REFERENCES tbl_ORDER(ORDER_ID)
);

CREATE TABLE tbl_ORDER_LIST (
  ORD_L_ID                      NUMBER(38),
  ORDER_ID			NUMBER(38) NOT NULL, 
  ORD_L_DATE 			DATE NULL,
  ORD_L_TOTAL_AMOUNT 	        NUMBER(15), 
  ORD_L_DESCRIPTION 		VARCHAR2(2000) NOT NULL, 
  ORD_L_STATUS 			VARCHAR2(2000) NOT NULL, 
  ORD_L_LINE_AMOUNT 		NUMBER(15),

CONSTRAINT PK_ORD_L_ID PRIMARY KEY(ORD_L_ID),

CONSTRAINT fk_order_list
    FOREIGN KEY (ORDER_ID)
    REFERENCES tbl_ORDER(ORDER_ID)
);

CREATE TABLE tbl_INVOICE(
INV_ID                          NUMBER(38),
INV_REFERENCE 	                VARCHAR2(2000) NOT NULL, 

 CONSTRAINT PK_INV_ID PRIMARY KEY(INV_ID)
);

CREATE TABLE tbl_INV_order (

INV_ORDID                       NUMBER(38),
INV_ID                          NUMBER(38),
ORDER_ID  			            NUMBER(38),

 CONSTRAINT PK_INVO_ID PRIMARY KEY(INV_ORDID),

 CONSTRAINT fk_inv_ord
    FOREIGN KEY (INV_ID)
    REFERENCES tbl_INVOICE(INV_ID),
 CONSTRAINT fk_ord_inv
    FOREIGN KEY (ORDER_ID)
    REFERENCES tbl_ORDER(ORDER_ID)
);

CREATE TABLE tbl_INVOICE_LIST (
INV_L_ID               NUMBER(38),
INV_ID  	        NUMBER(38) NOT NULL, 
INV_L_DATE 		DATE, 
INV_L_STATUS 		VARCHAR2(2000), 
INV_L_HOLD_REASON      VARCHAR2(2000), 
INV_L_AMOUNT 		NUMBER(15), 
INV_L_DESCRIPTION   VARCHAR2(2000),

CONSTRAINT PK_INV_L_ID PRIMARY KEY(INV_L_ID),

CONSTRAINT fk_INV_L_ID
    FOREIGN KEY (INV_ID)
    REFERENCES tbl_INVOICE(INV_ID)
);

CREATE SEQUENCE id_auto_incr start with 1
increment by 1; 

CREATE OR REPLACE TRIGGER order_trigger
BEFORE INSERT on tbl_order
FOR EACH ROW
BEGIN 
Select id_auto_incr.nextval 
into :new.ORDER_ID
from dual; 
END;

CREATE OR REPLACE TRIGGER order_list_trigger
BEFORE INSERT on tbl_order_list
FOR EACH ROW
BEGIN 
Select id_auto_incr.nextval 
into :new.ORD_L_ID
from dual; 
END;


CREATE OR REPLACE TRIGGER supplier_trigger
BEFORE INSERT on tbl_SUPPLIER
FOR EACH ROW
BEGIN 
Select id_auto_incr.nextval 
into :new.SUPP_ID
from dual; 
END;


CREATE OR REPLACE TRIGGER invoice_trigger
BEFORE INSERT on tbl_INVOICE
FOR EACH ROW
BEGIN 
Select id_auto_incr.nextval 
into :new.INV_ID
from dual; 
END;

CREATE OR REPLACE TRIGGER inv_order_trigger
BEFORE INSERT on tbl_INV_order
FOR EACH ROW
BEGIN 
Select id_auto_incr.nextval 
into :new.INV_ORDID
from dual; 
END;
 
CREATE OR REPLACE TRIGGER invoice_list_trigger
BEFORE INSERT on tbl_INVOICE_LIST
FOR EACH ROW
BEGIN 
Select id_auto_incr.nextval 
into :new.INV_L_ID
from dual; 
END;
// change supplier contact number with correct number
UPDATE  XXBCM_ORDER_MGT t
SET SUPP_CONTACT_NUMBER = REPLACE(t.SUPP_CONTACT_NUMBER, 'S' , '5');

UPDATE  XXBCM_ORDER_MGT t
SET SUPP_CONTACT_NUMBER = REPLACE(t.SUPP_CONTACT_NUMBER, 'o' , '0');

UPDATE  XXBCM_ORDER_MGT t
SET SUPP_CONTACT_NUMBER = REPLACE(t.SUPP_CONTACT_NUMBER, 'I' , '1')

// change date format

UPDATE  XXBCM_ORDER_MGT t
SET ORDER_DATE = REPLACE(t.ORDER_DATE, '15-09-2017' , '15-SEP-2017');

UPDATE  XXBCM_ORDER_MGT t
SET ORDER_DATE = REPLACE(t.ORDER_DATE, '03-07-2017' , '15-JUL-2017');

UPDATE  XXBCM_ORDER_MGT t
SET ORDER_DATE = REPLACE(t.ORDER_DATE, '03-07-2017' , '03-JUL-2017') ;

UPDATE  XXBCM_ORDER_MGT t
SET ORDER_DATE = REPLACE(t.ORDER_DATE, '06-07-2017' , '06-JUL-2017') ;

UPDATE  XXBCM_ORDER_MGT t
SET ORDER_DATE = REPLACE(t.ORDER_DATE, '20-08-2017' , '20-AUG-2017') ;

UPDATE  XXBCM_ORDER_MGT t
SET ORDER_DATE = REPLACE(t.ORDER_DATE, '03-06-2017' , '03-JUN-2017') ;


UPDATE  XXBCM_ORDER_MGT t
SET INVOICE_DATE = REPLACE(t.INVOICE_DATE, '02-09-2017' , '02-SEP-2017') ;

UPDATE  XXBCM_ORDER_MGT t
SET INVOICE_DATE = REPLACE(t.INVOICE_DATE, '17-06-2017' , '17-JUN-2017') ;

UPDATE  XXBCM_ORDER_MGT t
SET INVOICE_DATE = REPLACE(t.INVOICE_DATE, '04-09-2017' , '04-SEP-2017') ;

UPDATE  XXBCM_ORDER_MGT t
SET INVOICE_DATE = REPLACE(t.INVOICE_DATE, '16-08-2017' , '16-AUG-2017') ;

UPDATE  XXBCM_ORDER_MGT t
SET INVOICE_DATE = REPLACE(t.INVOICE_DATE, '18-04-2017' , '18-APR-2017') ;

UPDATE  XXBCM_ORDER_MGT t
SET INVOICE_DATE = REPLACE(t.INVOICE_DATE, '28-08-2017' , '28-AUG-2017') ;



UPDATE  XXBCM_ORDER_MGT t
SET INVOICE_DATE = REPLACE(t.INVOICE_DATE, '27-10-2017' , '27-OCT-2017') ;

UPDATE  XXBCM_ORDER_MGT t
SET INVOICE_DATE = REPLACE(t.INVOICE_DATE, '28-09-2017' , '28-SEP-2017') ;





